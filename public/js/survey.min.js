;(function ($) {
  'use strict';

  // Multi Step Survey
  // ====================

  var Survey = function (element) {
    var element = $(element)
      , currentPage = element.find('.page-wrapper.active')
      , currentRequired = currentPage.find('.required')
      , totalPGs = element.find('.page-wrapper')
      , totalRQs = element.find('.required')
      , totalAQs = 0
      , totalQs = element.find('.question').length
      , formSubmitted = false
      , progressBy = Math.round((100/totalQs) * 100 ) / 100;


    function addOther(parent, element) {
      parent.append('<input type="text" placeHolder="Tell us more" class="form-control"/>')
    };

    this.multiPartLogic = function(parent, element) {
      var subquestion = element.data('subq');
      if (subquestion) {
        parent.append(subquestion);
      } else {  
        this.next(parent);
      }
    };

    element.on('click', '.btn-start', function(e) {
      var parent = $(this).parents('.survey-info')
      parent.addClass('started');
      parent.siblings('.survey-form').addClass('active');
    });

    element.on('click', '.btn-next', function(e) {
      if (currentPageValid()) {
        turnPage('next');
      } else {
        var unansweredRQs = currentPage.find('.required').not('.answered');
        $.each(unansweredRQs, function(i, v) {
          $(v).addClass('error')
        });
      }
    });    

    element.on('click', '.btn-back', function(e) {
      if (totalPGs.index(currentPage) === 0) { return }
      turnPage('prev'); 
    });

    element.on('change', 'input, select, textarea', function(e) {
      var question = $(this).parents('.question-wrapper')
      var type = this.type;

      switch (type)  {
        case 'text':
        case 'textarea':
          if ($(this).val()) {
            addAnswered(question)
          } else {
            removeAnswered(question);
          }
          break;
        case 'checkbox':
          var checked = question.find('input:checked');
          if (checked.length > 0) {
            addAnswered(question);
          } else {
            removeAnswered(question);
          }    
          break;
        default:
          var mrs = $(this).parents('.mrs-wrapper')
          if (mrs.length > 0) {
            var subqs = mrs.find('.subq').length;
            var subqChecked = mrs.find('input:checked').length;
            if (subqs === subqChecked) {
              addAnswered(question);
            }
          } else {
            addAnswered(question);
          }
      }

      if (question.has('error')) {
        question.removeClass('error');
      }
      // Make question been touched
      if (!question.is('.dirty') ) {
        question.addClass('dirty')
      };
      updateProgress(totalAQs);
    });

    $('form').submit(function(e) {
      e.preventDefault();
      var location = window.location
        , token = location.pathname.split('/')[3]
        , url = location.origin + "/campaign/survey/response/" + token
        , submit = $('.btn-submit')
        , form = $(this);

      // prevent multiple submit
      if ($('.btn-submit').hasClass('disabled') || formSubmitted) { return };
      formSubmitted = true

      var data = form.serialize();
      submit.prepend('<i class="fa fa-cog fa-spin" style="margin-right: 5px; font-size: 13px;"> ')
      $.ajax({
        url: url,
        type: "POST",
        data: data,
        dataType: 'json'
      }).done(function(r) {
        if (r.thank_url) {
          window.location.replace.url(r.thank_url)
        } else {
          window.setTimeout(function() {
            submit.find('.fa').remove();
            form.hide();
            form.parent().append("<div class='response-ty'><h1>Thanks You, You Answers Has Been Submitted</h1>\
              <p class='ty-msg'>" + htmlSafe(r.thank_msg) + "</p></div>");
            }, 1500);
          }
        })
      .fail(function(r) {
        alert("We couldn't submit your answers, please try to submit your answer again.")
        submit.find('.fa').remove();
        formSubmitted = false;
      })
    });

    function htmlSafe(str) {
      return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
    }

    function addAnswered(question) {
      if (!question.is('.answered')) {
        question.addClass('answered');
        totalAQs ++
      }
    };    

    function removeAnswered(question) {
      question.removeClass('answered');
      if (totalAQs > 0) {
        totalAQs --
      }
    };

    function updateProgress() {
      var percent = Math.round((progressBy * totalAQs) * 100 ) /100;
      if (totalAQs === totalQs) {
        $('.btn-success').removeClass('disabled');
        $('.progress-bar').css({width: '100%'});
        $('.progress-bar span').text('100%');
      } else {
        $('.btn-success').addClass('disabled');
        $('.progress-bar').css({width: (percent)+"%"});
        $('.progress-bar span').text((percent)+"%");
      }
    };

    function turnPage(direction) {
      currentPage.removeClass('active');
      currentPage = currentPage[direction]('.page-wrapper')
      if (totalPGs.index(currentPage) === 0) { 
        $('.btn-back').addClass('disabled');
      } else {
        $('.btn-back').removeClass('disabled');
      }
      if (totalPGs.index(currentPage) === totalPGs.length - 1) {
        $('.btn-next').hide();
        $('.btn-success').removeClass('hidden');
      } else {
        $('.btn-next').fadeIn();
        $('.btn-success').addClass('hidden');
      }
      currentPage.addClass('active')
    }

    function currentPageValid() {
      return currentRequired.length === currentPage.find('.answered').length
    }
  }

  Survey.VERSION = '1.0'

  Survey.TRANSITION_DURATION = 150

  function Plugin(options) {
    new Survey(this)
    return this;
  }


  $.fn.survey = Plugin

})(jQuery);

jQuery('.survey-wrapper').survey();